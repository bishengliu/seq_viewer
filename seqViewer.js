var sequence = "GAGCTTGGCCCATTGCATACGTTGTATCCATATCATAATATGTACATTTATATTGGCTCATGTCCAACATTACCGCCATGTTGACATTGATTATTGACTAGTTATTAATAGTAATCAATTACGGGGTCATTAGTTCATAGCCCATATATGGAGTTCCGCGTTACATAACTTACGGTAAATGGCCCGCCTGGCTGACCGCCCAACGACCCCCGCCCATTGACGTCAATAATGACGTATGTTCCCATAGTAACGCCAATAGGGACTTTCCATTGACGTCAATGGGTGGAGTATTTACGGTAAACTGCCCACTTGGCAGTACATCAAGTGTATCATATGCCAAGTACGCCCCCTATTGACGTCAATGACGGTAAATGGCCCGCCTGGCATTATGCCCAGTACATGACCTTATGGGACTTTCCTACTTGGCAGTACATCTACGTATTAGTCATCGCTATTACCATGGTGATGCGGTTTTGGCAGTACATCAATGGGCGTGGATAGCGGTTTGACTCACGGGGATTTCCAAGTCTCCACCCCATTGACGTCAATGGGAGTTTGTTTTGGCACCAAAATCAACGGGACTTTCCAAAATGTCGTAACAACTCCGCCCCATTGACGCAAATGGGCGGTAGGCGTGTACGGTGGGAGGTCTATATAAGCAGAGCTCGTTTAGTGAACCGTCAGATCGCCTGGAGACGCCATCCACGCTGTTTTGACCTCCATAGAAGACACCGGGACCGATCCAGCCTCCGGTCGACCGATCCTGAGAACTTCAGGGTGAGTTTGGGGACCCTTGATTGTTCTTTCTTTTTCGCTATTGTAAAATTCATGTTATATGGAGGGGGCAAAGTTTTCAGGGTGTTGTTTAGAATGGGAAGATGTCCCTTGTATCACCATGGACCCTCATGATAATTTTGTTTCTTTCACTTTCTACTCTGTTGACAACCATTGTCTCCTCTTATTTTCTTTTCATTTTCTGTAACTTTTTCGTTAAACTTTAGCTTGCATTTGTAACGAATTTTTAAATTCACTTTTGTTTATTTGTCAGATTGTAAGTACTTTCTCTAATCACTTTTTTTTCAAGGCAATCAGGGTATATTATATTGTACTTCAGCACAGTTTTAGAGAACAATTGTTATAATTAAATGATAAGGTAGAATATTTCTGCATATAAATTCTGGCTGGCGTGGAAATATTCTTATTGGTAGAAACAACTACACCCTGGTCATCATCCTGCCTTTCTCTTTATGGTTACAATGATATACACTGTTTGAGATGAGGATAAAATACTCTGAGTCCAAACCGGGCCCCTCTGCTAACCATGTTCATGCCTTCTTCTCTTTCCTACAGCTCCTGGGCAACGTGCTGGTTGTTGTGCTGTCTCATCATTTTGGCAAAGAATTCCTCGACGGATCCCTCGAGGAATTCTGACACTATGAAGTGCCTTTTGTACTTAGCCTTTTTATTCATTGGGGTGAATTGCAAGTTCACCATAGTTTTTCCACACAACCAAAAAGGAAACTGGAAAAATGTTCCTTCTAATTACCATTATTGCCCGTCAAGCTCAGATTTAAATTGGCATAATGACTTAATAGGCACAGCCTTACAAGTCAAAATGCCCAAGAGTCACAAGGCTATTCAAGCAGACGGTTGGATGTGTCATGCTTCCAAATGGGTCACTACTTGTGATTTCCGCTGGTATGGACCGAAGTATATAACACATTCCATCCGATCCTTCACTCCATCTGTAGAACAATGCAAGGAAAGCATTGAACAAACGAAACAAGGAACTTGGCTGAATCCAGGCTTCCCTCCTCAAAGTTGTGGATATGCAACTGTGACGGATGCCGAAGCAGTGATTGTCCAGGTGACTCCTCACCATGTGCTGGTTGATGAATACACAGGAGAATGGGTTGATTCACAGTTCATCAACGGAAAATGCAGCAATTACATATGCCCCACTGTCCATAACTCTACAACCTGGCATTCTGACTATAAGGTCAAAGGGCTATGTGATTCTAACCTCATTTCCATGGACATCACCTTCTTCTCAGAGGACGGAGAGCTATCATCCCTGGGAAAGGAGGGCACAGGGTTCAGAAGTAACTACTTTGCTTATGAAACTGGAGGCAAGGCCTGCAAAATGCAATACTGCAAGCATTGGGGAGTCAGACTCCCATCAGGTGTCTGGTTCGAGATGGCTGATAAGGATCTCTTTGCTGCAGCCAGATTCCCTGAATGCCCAGAAGGGTCAAGTATCTCTGCTCCATCTCAGACCTCAGTGGATGTAAGTCTAATTCAGGACGTTGAGAGGATCTTGGATTATTCCCTCTGCCAAGAAACCTGGAGCAAAATCAGAGCGGGTCTTCCAATCTCTCCAGTGGATCTCAGCTATCTTGCTCCTAAAAACCCAGGAACCGGTCCTGCTTTCACCATAATCAATGGTACCCTAAAATACTTTGAGACCAGATACATCAGAGTCGATATTGCTGCTCCAATCCTCTCAAGAATGGTCGGAATGATCAGTGGAACTACCACAGAAAGGGAACTGTGGGATGACTGGGCACCATATGAAGACGTGGAAATTGGACCCAATGGAGTTCTGAGGACCAGTTCAGGATATAAGTTTCCTTTATACATGATTGGACATGGTATGTTGGACTCCGATCTTCATCTTAGCTCAAAGGCTCAGGTGTTCGAACATCCTCACATTCAAGACGCTGCTTCGCAACTTCCTGATGATGAGAGTTTATTTTTTGGTGATACTGGGCTATCCAAAAATCCAATCGAGCTTGTAGAAGGTTGGTTCAGTAGTTGGAAAAGCTCTATTGCCTCTTTTTTCTTTATCATAGGGTTAATCATTGGACTATTCTTGGTTCTCCGAGTTGGTATCCATCTTTGCATTAAATTAAAGCACACCAAGAAAAGACAGATTTATACAGACATAGAGATGAACCGACTTGGAAAGTAACTCAAATCCTGCACAACAGATTCTTCATGTTTGGACCAAATCAACTTGTGATACCATGCTCAAAGAGGCCTCAATTATATTTGAGTTTTTAATTTTTATGAAAAAAAAAAAAAAAAACGGAATTCCTCGAGGGATCCGTCGAGGAATTCACTCCTCAGGTGCAGGCTGCCTATCAGAAGGTGGTGGCTGGTGTGGCCAATGCCCTGGCTCACAAATACCACTGAGATCTTTTTCCCTCTGCCAAAAATTATGGGGACATCATGAAGCCCCTTGAGCATCTGACTTCTGGCTAATAAAGGAAATTTATTTTCATTGCAATAGTGTGTTGGAATTTTTTGTGTCTCTCACTCGGAAGGACATATGGGAGGGCAAATCATTTAAAACATCAGAATGAGTATTTGGTTTAGAGTTTGGCAACATATGCCCATATGCTGGCTGCCATGAACAAAGGTTGGCTATAAAGAGGTCATCAGTATATGAAACAGCCCCCTGCTGTCCATTCCTTATTCCATAGAAAAGCCTTGACTTGAGGTTAGATTTTTTTTATATTTTGTTTTGTGTTATTTTTTTCTTTAACATCCCTAAAATTTTCCTTACATGTTTTACTAGCCAGATTTTTCCTCCTCTCCTGACTACTCCCAGTCATAGCTGTCCCTCTTCTCTTATGGAGATCCCTCGACGGATCGGCCGCAATTCGTAATCATGTCATAGCTGTTTCCTGTGTGAAATTGTTATCCGCTCACAATTCCACACAACATACGAGCCGGAAGCATAAAGTGTAAAGCCTGGGGTGCCTAATGAGTGAGCTAACTCACATTAATTGCGTTGCGCTCACTGCCCGCTTTCCAGTCGGGAAACCTGTCGTGCCAGCTGCATTAATGAATCGGCCAACGCGCGGGGAGAGGCGGTTTGCGTATTGGGCGCTCTTCCGCTTCCTCGCTCACTGACTCGCTGCGCTCGGTCGTTCGGCTGCGGCGAGCGGTATCAGCTCACTCAAAGGCGGTAATACGGTTATCCACAGAATCAGGGGATAACGCAGGAAAGAACATGTGAGCAAAAGGCCAGCAAAAGGCCAGGAACCGTAAAAAGGCCGCGTTGCTGGCGTTTTTCCATAGGCTCCGCCCCCCTGACGAGCATCACAAAAATCGACGCTCAAGTCAGAGGTGGCGAAACCCGACAGGACTATAAAGATACCAGGCGTTTCCCCCTGGAAGCTCCCTCGTGCGCTCTCCTGTTCCGACCCTGCCGCTTACCGGATACCTGTCCGCCTTTCTCCCTTCGGGAAGCGTGGCGCTTTCTCATAGCTCACGCTGTAGGTATCTCAGTTCGGTGTAGGTCGTTCGCTCCAAGCTGGGCTGTGTGCACGAACCCCCCGTTCAGCCCGACCGCTGCGCCTTATCCGGTAACTATCGTCTTGAGTCCAACCCGGTAAGACACGACTTATCGCCACTGGCAGCAGCCACTGGTAACAGGATTAGCAGAGCGAGGTATGTAGGCGGTGCTACAGAGTTCTTGAAGTGGTGGCCTAACTACGGCTACACTAGAAGAACAGTATTTGGTATCTGCGCTCTGCTGAAGCCAGTTACCTTCGGAAAAAGAGTTGGTAGCTCTTGATCCGGCAAACAAACCACCGCTGGTAGCGGTGGTTTTTTTGTTTGCAAGCAGCAGATTACGCGCAGAAAAAAAGGATCTCAAGAAGATCCTTTGATCTTTTCTACGGGGTCTGACGCTCAGTGGAACGAAAACTCACGTTAAGGGATTTTGGTCATGAGATTATCAAAAAGGATCTTCACCTAGATCCTTTTAAATTAAAAATGAAGTTTTAAATCAATCTAAAGTATATATGAGTAAACTTGGTCTGACAGTTACCAATGCTTAATCAGTGAGGCACCTATCTCAGCGATCTGTCTATTTCGTTCATCCATAGTTGCCTGACTCCCCGTCGTGTAGATAACTACGATACGGGAGGGCTTACCATCTGGCCCCAGTGCTGCAATGATACCGCGAGACCCACGCTCACCGGCTCCAGATTTATCAGCAATAAACCAGCCAGCCGGAAGGGCCGAGCGCAGAAGTGGTCCTGCAACTTTATCCGCCTCCATCCAGTCTATTAATTGTTGCCGGGAAGCTAGAGTAAGTAGTTCGCCAGTTAATAGTTTGCGCAACGTTGTTGCCATTGCTACAGGCATCGTGGTGTCACGCTCGTCGTTTGGTATGGCTTCATTCAGCTCCGGTTCCCAACGATCAAGGCGAGTTACATGATCCCCCATGTTGTGCAAAAAAGCGGTTAGCTCCTTCGGTCCTCCGATCGTTGTCAGAAGTAAGTTGGCCGCAGTGTTATCACTCATGGTTATGGCAGCACTGCATAATTCTCTTACTGTCATGCCATCCGTAAGATGCTTTTCTGTGACTGGTGAGTACTCAACCAAGTCATTCTGAGAATAGTGTATGCGGCGACCGAGTTGCTCTTGCCCGGCGTCAATACGGGATAATACCGCGCCACATAGCAGAACTTTAAAAGTGCTCATCATTGGAAAACGTTCTTCGGGGCGAAAACTCTCAAGGATCTTACCGCTGTTGAGATCCAGTTCGATGTAACCCACTCGTGCACCCAACTGATCTTCAGCATCTTTTACTTTCACCAGCGTTTCTGGGTGAGCAAAAACAGGAAGGCAAAATGCCGCAAAAAAGGGAATAAGGGCGACACGGAAATGTTGAATACTCATACTCTTCCTTTTTCAATATTATTGAAGCATTTATCAGGGTTATTGTCTCATGAGCGGATACATATTTGAATGTATTTAGAAAAATAAACAAATAGGGGTTCCGCGCACATTTCCCCGAAAAGTGCCACCTAAATTGTAAGCGTTAATATTTTGTTAAAATTCGCGTTAAATTTTTGTTAAATCAGCTCATTTTTTAACCAATAGGCCGAAATCGGCAAAATCCCTTATAAATCAAAAGAATAGACCGAGATAGGGTTGAGTGTTGTTCCAGTTTGGAACAAGAGTCCACTATTAAAGAACGTGGACTCCAACGTCAAAGGGCGAAAAACCGTCTATCAGGGCGATGGCCCACTACGTGAACCATCACCCTAATCAAGTTTTTTGGGGTCGAGGTGCCGTAAAGCACTAAATCGGAACCCTAAAGGGAGCCCCCGATTTAGAGCTTGACGGGGAAAGCCGGCGAACGTGGCGAGAAAGGAAGGGAAGAAAGCGAAAGGAGCGGGCGCTAGGGCGCTGGCAAGTGTAGCGGTCACGCTGCGCGTAACCACCACACCCGCCGCGCTTAATGCGCCGCTACAGGGCGCGTCCCATTCGCCATTCAGGCTGCGCAACTGTTGGGAAGGGCGATCGGTGCGGGCCTCTTCGCTATTACGCCAGCTGGCGAAAGGGGGATGTGCTGCAAGGCGATTAAGTTGGGTAACGCCAGGGTTTTCCCAGTCACGACGTTGTAAAACGACGGCCAGTGAGCGCGCGTAATACGACTCACTATAGGGCGAATTGGAGCTCCACCGCGGTGGCGGCCGCTCTAGA";
var plasmidName = "pCMV-VSV-G Map";

var features = [
    {name: "GAG_enhancer", start: 164, end: 451, color: colores_google(0), clockwise: 0, cut:null},
    {name: "AmpR", start: 4837, end: 5697, color: colores_google(1), clockwise: 0, cut:null},
    {name: "lac_promoter", start: 3725, end: 3754, color: colores_google(2), clockwise: 0, cut:null},
    {name: "rb_glob_PA_terminator", start: 3201, end: 3644, color: colores_google(3), clockwise: 0, cut:null},
    {name: "vsv-G", start: 1436, end: 2124, color: colores_google(4), clockwise: 1, cut:null},
    {name: "CMV_immearly_promoter", start: 84, end: 660, color: colores_google(5), clockwise: 1, cut:null},
    {name: "CMV_promoter", start: 618, end: 687, color: colores_google(6), clockwise: 1, cut:null},
    {name: "CMV2_promoter", start: 630, end: 749, color: colores_google(7), clockwise: 1, cut:null},
    {name: "pBR322_origin", start: 4063, end: 4682, color: colores_google(8), clockwise: 0, cut:null},
    {name: "T7_promoter", start: 6451, end: 6469, color: colores_google(9), clockwise: 0, cut:null},
    {name: "LacZ_a", start: 6284, end: 6432, color: colores_google(10), clockwise: 0, cut:null},
    {name: "5'-LTR", start: 148, end: 974, color: colores_google(11), clockwise: 1, cut:null}
];
//name, start, end, color, clockwise, cut;

//ntPerLine: the number of nt perline
var ntPerLine = 180;

//generate complementary sequence
var cSequence = genCSeq(sequence);


//generate sequence array based on the ntPerLine
var seqArray = formatSeq(sequence, ' ', ntPerLine); //array for forward sequence
var cSeqArray = formatSeq(cSequence, ' ', ntPerLine);; //array for complementary sequence


//use d3 to display seq in text and as well as the features
//div id is displaySeq
//draw canvas
//seqWidth and featureWdith will be calculated later
//define the seqWidth
seqWidth = 50;
//featureWdith 
featureWdith = 50;
var arrayLength = seqArray.length;
//draw svg
var svg = drawSVG("#displaySeq", arrayLength, seqWidth, featureWdith);

//functions
//render google color
function colores_google(n) {
    var colores_g = ["#3366cc", "#dc3912", "#ff9900", "#109618", "#990099", "#0099c6", "#dd4477", "#66aa00", "#b82e2e", "#316395", "#994499", "#22aa99", "#aaaa11", "#6633cc", "#e67300", "#8b0707", "#651067", "#329262", "#5574a6", "#3b3eac"];
    return colores_g[n % colores_g.length];
}

//generate complementary sequence
function genCSeq(sequence){
    var cSequence ="";
    var cSeqArray = [];
    var seqArray = sequence.toUpperCase().split('');
    $.each(seqArray, function(i, d){
        if(d === "A"){
            cSeqArray.push("T")
        }
        else if(d==="T"){
            cSeqArray.push("A")
        }
        else if(d==="G"){
            cSeqArray.push("C")
        }
        else{
            cSeqArray.push("G")
        }
    })
    return cSeqArray.join('');
}

//generate sequence that split with a symbol every 10 nt and output the array
function formatSeq(sequence, symbol, ntPerLine){
    var outputArray = [];
    var array = sequence.match(new RegExp('.{1,' + ntPerLine + '}', 'g')).join('|').split('|');
    $.each(array, function (i, d) { 
        var itemSeq = d.match(/.{1,10}/g).join(symbol);
        outputArray.push(itemSeq);
     })
     return outputArray;
}

//draw empty using d3
function drawSVG(id, arrayLength, seqWidth, featureWdith) { 
    var margin = {top: 20, right: 20, bottom: 20, left: 20};
    width = +$(id).width() - margin.left - margin.right;
    height = arrayLength * (seqWidth + featureWdith) - margin.top - margin.bottom;
    //calculate the width
    var svg = d3.select(id)
                .append("svg")
                .attr("width", width + margin.left + margin.right)
			    .attr("height", height + margin.top + margin.bottom)
                    .append("g")
                        .attr("transform", "translate(" + margin.left +"," + margin.top + ")");
    return svg;
 }